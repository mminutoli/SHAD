language: cpp
sudo: false
notifications:
  email: false

matrix:
  include:
    # Clang on OSX
    - os: osx
      env: C_COMPILER=clang CXX_COMPILER=clang++ DEPLOY_PAGES=0
      osx_image: xcode9.1
      compiler: clang

    # Clang on Linux
    - os: linux
      addons: &clang60
        apt:
          packages:
            - clang-6.0
            - g++-7
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: C_COMPILER=clang-6.0 && CXX_COMPILER=clang++-6.0 DEPLOY_PAGES=1
      addons: *clang50

branches:
  except:
    - gh-pages

before_install:
  - export CC=${C_COMPILER}
  - export CXX=${CXX_COMPILER}
  - ${CC} --version
  - ${CXX} --version
  - git clone --branch release-1.8.0 --depth 1 https://github.com/google/googletest.git
  - cd googletest && mkdir build
  - cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$HOME/gtest-root -Bbuild -H.
  - cmake --build build -- -j 2
  - cmake --build build --target install
  - cd ..
  - git clone --depth 1 https://github.com/01org/tbb.git
  - cd tbb
  - make work_dir=$(pwd)/build-tbb tbb_root=$(pwd)
  - mkdir $HOME/tbb-root && cp -r include $HOME/tbb-root/
  - mkdir $HOME/tbb-root/lib && cp $(pwd)/build-tbb_release/libtbb* $HOME/tbb-root/lib/
  - cd ..
  - git clone --depth 1 --branch v1.4.1 https://github.com/google/benchmark.git
  - cd benchmark
  - mkdir build
  - cd build
  - cmake .. -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$HOME/benchmark-root
  - make
  - make install
  - cd ../..

script:
  - mkdir build-release
  - cmake -DCMAKE_BUILD_TYPE=Release -DSHAD_RUNTIME_SYSTEM=TBB -DGTEST_ROOT=$HOME/gtest-root -DTBB_ROOT=$HOME/tbb-root -Dbenchmark_ROOT=$HOME/benchmark-root -Bbuild-release -H.
  - cmake --build build-release -- -j 2
  - cmake --build build-release --target test -- ARGS="--output-on-failure"

# Generate documentation
after_success:
  - test $DEPLOY_PAGES = 1 &&
    pip install -r docs/requirements.txt
    cd $TRAVIS_BUILD_DIR &&
    mkdir build-doxygen && cd build-doxygen && cmake .. -DSHAD_ENABLE_UNIT_TEST=OFF -DSHAD_ENABLE_DOXYGEN=ON &&
    make docs

deploy:
  provider: pages
  local-dir: $TRAVIS_BUILD_DIR/build-doxygen/docs/html
  skip-cleanup: true
  github-token: $GH_REPO_TOKEN
  keep-history: true
  on:
    branch: master
    condition: $DEPLOY_PAGES = 1
